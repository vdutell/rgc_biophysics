//Run parameters
dt = 0.025
//tstop = 0 //now called tstop_val
dly = 1


// Patch on soma
objref siclamp
soma siclamp = new IClamp(0.5)
siclamp.amp = 0 // units n
siclamp.dur = tstop_val // units ms
siclamp.del = dly // units ms


//patch on dendrites
objref thisone, diclamp[segsize]
id = 0

forsec dends {
	thisone = new SectionRef()
	thisone diclamp[id] = new IClamp(0.5)
	diclamp[id].amp = 0 // units n
	diclamp[id].dur = tstop_val // units ms
	diclamp[id].del = dly // units ms
	id+=1
}


//calc sine wave stimulation as a fucntion of position and time
func calc_sin() {
	xpos_um = $1
	time_ms = $2
	xpos_mm = xpos_um*1000

	temp_fq_ms = temp_fq_sec/1000 //convert temp fq from hz to cyc per ms
	cat_mmpdeg = 0.218 // vis_ang for cat: 1 deg = 0.218mm (Visual Perception: The Neurophysiological Foundations)
	spac_fq_mm = spac_fq_deg/cat_mmpdeg //convert spat fq from cpd to cyc per mm

	fx = xpos_mm*spac_fq_mm //spatial frequency component
	wt = time_ms*temp_fq_ms //temporal frequency component
	res = sin(2*PI*(fx-wt)) //calculate sine wave
	
	return(res)
}


//proc init(){
//	Iin = 0
//}

proc advance() {
 	fadvance()
 	time_delayed = t-siclamp.del

 	dends for i=0,n3d()-1{
 		xcoord = x3d(i)
 		sine_val = calc_sin(xcoord,t)
 		dend[i] diclamp.amp = ampl+ampl*sine_val
 		
 	}	
 	Iin = ampl+ampl*sine_val
}

//init()

proc pp() {
	spac_fq_deg = $1 //fq in cpd
	temp_fq_sec = $2 //fq in hz
	ampl = $3 //amplitude
	soma_multiplier = $4 //soma size multiplier

	soma_original = soma.diam
	soma.diam = soma_original*soma_multiplier

	//init()
	advance()
	run()

	soma.diam = soma_original

}

